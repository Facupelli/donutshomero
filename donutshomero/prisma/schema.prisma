datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Donut {
  id                String     @default(cuid()) @id
  name              String
  price             Int
  quantity          Int         @default(1)
  stock             Int         @default(30)
  available         Boolean    @default(true)
  donutsPromo       DonutsPromo[]
}

model Promo {
  id                String    @default(cuid()) @id
  name              String
  price             Int
  quantity          Int        @default(1)
  available         Boolean    @default(true)
  donutsQuantity    Int
  donutsPromo       DonutsPromo[]
}

model DonutsPromo {
  donut             Donut       @relation(fields: [donutId], references: [id])
  donutId           String 
  donutQuantity     Int
  promo             Promo       @relation(fields: [promoId], references: [id])
  promoId           String 
  assignedAt        DateTime    @default(now())
  assignedBy        String

  @@id([donutId, promoId])
}

model User {
  id                      String       @default(cuid()) @id
  name                    String
  surname                 String
  phone                   String       @unique
  address                 String
  addressNumber           Int
  ubiLink                 String?
  email                   String?      @unique
  createdAt               DateTime     @default(now()) @map(name: "created_at")
  updatedAt               DateTime     @updatedAt @map(name: "updated_at")
  orders                  Order[]
  @@map(name: "users")
}

model Order {
  id                      String       @default(cuid()) @id
  items                   Json[]
  customer                User       @relation(fields: [customerId], references: [id])
  customerId              String
  totalPrice              Int
  address                 String
  ubiLink                 String
  paymentMethod           String
  paymentStatus           String    @default("PENDING")
  deliverStatus           String    @default("PENDING")
  createdAt               DateTime  @default(now()) @map(name: "created_at")
  updatedAt               DateTime  @updatedAt @map(name: "updated_at")
  
  @@map(name: "orders")
}


